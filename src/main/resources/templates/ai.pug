doctype html
html(lang="ko")
  head
    meta(charset="UTF-8")
    meta(
      name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no"
    )
    meta(http-equiv="X-UA-Compatible" content="ie=edge")
    title Spring AI Chat
    link(rel="stylesheet" href="/global.css")

  body
    include nav.pug
    h4 Spring AI
    div#messages(style="white-space: pre-wrap;")

    // form 태그 추가하여 입력창과 버튼을 감싸기
    form#chatForm
      div.input_frame_hori
        input#userInput(type="text" name="message" placeholder="메시지를 입력하세요")
        button.simplebutton-sm(type="submit") 전송

    script.
      document.getElementById('chatForm').addEventListener('submit', function (event) {
        event.preventDefault(); // 기본 폼 제출 동작 방지

        const userInput = document.getElementById('userInput').value; // 입력된 메시지 가져오기
        const messagesDiv = document.getElementById('messages');

        // 메시지를 서버에 전송하고 응답을 받아와 화면에 표시
        fetch(`/ai/chat?message=${encodeURIComponent(userInput)}`)
        .then(response => response.text())
        .then(text => {
          // 받은 응답을 화면에 추가하여 표시
          messagesDiv.innerHTML += `<span>${text}</span><br>`;
          document.getElementById('userInput').value = ''; // 입력 필드 초기화
        })
        .catch(error => console.error('메시지 전송 실패:', error));
      });
